(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{407:function(v,_,t){"use strict";t.r(_);var a=t(56),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"tcp三次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp三次握手"}},[v._v("#")]),v._v(" TCP三次握手")]),v._v(" "),t("p",[v._v("为了对每次发送的数据量进行跟踪与协商，需要确保数据段的发送和接收同步，根据接收到的数据量而确认数据发送、接收完毕后何时撤销联系，并建立虚连接。")]),v._v(" "),t("p",[v._v("为了提供可靠的传输，TCP 在发送之前需要以特定的顺序将数据包的序号，需要将这些包传给目标机之后的确认消息。")]),v._v(" "),t("p",[v._v("双方一开始都是处于 CLOSED 状态，然后服务端监听端口，进入 LISTENE 状态。")]),v._v(" "),t("p",[v._v("由客户端主动发送链接到服务端，会发送一个 SYN（seq=x） 到服务器，并进入 SYN-SEND 状态，等待服务器的确认。")]),v._v(" "),t("p",[v._v("第二次，服务器收到 SYN 包，确认客户端的 SYN（ack=x+1）,同时发送一个 SYN 包(seq=y), 即 SYN + ACK 包，服务器进入 SYN-RECV 状态。")]),v._v(" "),t("p",[v._v("第三次：客户端收到服务器的 SYN + ACK 包，向服务器发送 ACK(ack=y+1) ，此包发送完毕，客户端和服务器进入 ESTABLISHED （TCP连接成功）状态。完成三次握手。")]),v._v(" "),t("p",[v._v("注意：\nSYN 需要消耗一个序列号，下次发送 ACK 序列号要加1. （凡是需要对端确认的，一定消耗TCP报文的序列号),SYN 需要对端的确认, ACK 不需要。")]),v._v(" "),t("h1",{attrs:{id:"为什么不是两次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么不是两次握手"}},[v._v("#")]),v._v(" 为什么不是两次握手")]),v._v(" "),t("p",[v._v("因为两次无法确认客户端的接收能力。")]),v._v(" "),t("p",[v._v("如果是两次的话，第一次握手确认了客户端的发送能力。服务端接收到 SYN 包，确认了服务器的接收能力，以及要发送 SYN + ACK 包（确认服务器的发送能力）。但是还没有确认客户端的接收能力。")]),v._v(" "),t("p",[v._v("假如现在发送了一次 SYN 报文，但是这个包在网络中停滞了，迟迟到不了服务器端，TCP以为丢了包，于是重传，两次握手建立好了连接。")]),v._v(" "),t("p",[v._v("如果第一个连接结束了关闭了，这个停滞在网络中的包才到达了服务器，两次握手已经完成连接，但是客户端不知道链接了。带来了连接滋养的浪费。")]),v._v(" "),t("h1",{attrs:{id:"为什么不是四次"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么不是四次"}},[v._v("#")]),v._v(" 为什么不是四次")]),v._v(" "),t("p",[v._v("三次握手已经可以确认服务器的和客户端的接收发送能力。只要大雨3次就是可以的，只是没有这么多的必要。")]),v._v(" "),t("h1",{attrs:{id:"三次握手过程中可以携带数据吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三次握手过程中可以携带数据吗"}},[v._v("#")]),v._v(" 三次握手过程中可以携带数据吗？")]),v._v(" "),t("p",[v._v("第三次握手的时候，是可以携带数据的，前两次不能够携带。")]),v._v(" "),t("p",[v._v("如果前两次能够携带数据，一旦有人想攻击服务器，它只需要在SYN报文中放大量的数据，服务器就需要消耗更多的时间和空间去处理这些数据，增大了服务器被攻击的风险。")]),v._v(" "),t("p",[v._v("第三次握手，客户端已经处理连接成功状态，服务器也能够确认接收、发送能力。这个时候相对安全。")]),v._v(" "),t("h1",{attrs:{id:"如果两端同时打开会怎么样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果两端同时打开会怎么样"}},[v._v("#")]),v._v(" 如果两端同时打开会怎么样?")]),v._v(" "),t("p",[v._v("如果双方同时发送 SYN 报文，状态变化会怎么养呢?")]),v._v(" "),t("p",[v._v("同时发送 SYN，两方会刚上。")]),v._v(" "),t("p",[v._v("发送完 SYN, 双方都处于 SYN-SENT.")]),v._v(" "),t("p",[v._v("在收到对方的 SYN 后，状态都为 SYN-REVD.")]),v._v(" "),t("p",[v._v("接着会回复对应的 ACK + SYN，两个状态一起变为连接成功。")]),v._v(" "),t("p",[v._v("这就是同时打开清空下的状态变迁。")])])}),[],!1,null,null,null);_.default=s.exports}}]);