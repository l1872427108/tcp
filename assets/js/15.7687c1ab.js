(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{410:function(t,a,v){"use strict";v.r(a);var _=v(56),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"tcp-报文头部字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp-报文头部字段"}},[t._v("#")]),t._v(" TCP 报文头部字段")]),t._v(" "),v("h2",{attrs:{id:"源端口、目标端口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#源端口、目标端口"}},[t._v("#")]),t._v(" 源端口、目标端口")]),t._v(" "),v("p",[t._v("TCP 连接的 四元组 --- 源 IP、源端口、目标 IP、目标端口。用来标识唯一一个连接。")]),t._v(" "),v("p",[t._v("在 IP 层就已经处理了 IP。TCP 只需要记录两者的端口即可。")]),t._v(" "),v("h1",{attrs:{id:"序列号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#序列号"}},[t._v("#")]),t._v(" 序列号")]),t._v(" "),v("p",[t._v("Sequence number ，指的是本报文段第一个字节的序列号。序列号是一个长为4个字节, 也就是 32 位的无符号整数，也就是 32 位的无符号整数，0 ～ 2^32 - 1. 如果达到最大值后就循环到 0。")]),t._v(" "),v("p",[t._v("序列号在 TCP 通信的过程中有两个作用：")]),t._v(" "),v("ul",[v("li",[t._v("在 SYN 报文中交换彼此的初始序列号。")]),t._v(" "),v("li",[t._v("保证数据包按正确的顺序组装。")])]),t._v(" "),v("h1",{attrs:{id:"isn"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#isn"}},[t._v("#")]),t._v(" ISN")]),t._v(" "),v("p",[t._v("初始化序列号，在三次握手中，双方会用过 SYN 报文来交换彼此的 ISN。")]),t._v(" "),v("p",[t._v("ISN 不是一个固定的值，而是每 4ms 加 1， 溢出则回到 0 ，这个算法使得 ISN 变得很困难。")]),t._v(" "),v("p",[t._v("如果 ISN 能被用户猜测到，源IP和源端口号容易伪造，当攻击者猜测 ISN 之后，直接伪造一个 RST 后，可以强制连接关闭的，非常危险。")]),t._v(" "),v("p",[t._v("而动态增长的 ISN 大大提高了猜测 ISN 的难度。")]),t._v(" "),v("h1",{attrs:{id:"确认号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#确认号"}},[t._v("#")]),t._v(" 确认号")]),t._v(" "),v("p",[t._v("即 ACK. 用来告诉对方下一个期望接收的序列号。小于 ACK 的所有字节已经全部收到。")]),t._v(" "),v("h1",{attrs:{id:"标记位"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#标记位"}},[t._v("#")]),t._v(" 标记位")]),t._v(" "),v("p",[t._v("常见的标记位有 SYN、ACK、FIN、RST、PSH\nFIN：即Finish，表示发送方准备断开连接。\nRST：即 Reset，用来强制断开连接。\nPSH: 即 Push，告知对方这些数据包收到后应该马上交给上层的应用，不能缓存。")]),t._v(" "),v("h1",{attrs:{id:"窗口大小"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#窗口大小"}},[t._v("#")]),t._v(" 窗口大小")]),t._v(" "),v("p",[t._v("占用两个字节，也就是 16 位，但是实际上是不够用的。因此 TCP 引入了窗口缩放的选项,作为窗口缩放的比例因子，这个比例因子的范围在 0 ～ 14，比例因子可以将窗口的值扩大为原来的 2^n 次方。")]),t._v(" "),v("h1",{attrs:{id:"校验和"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#校验和"}},[t._v("#")]),t._v(" 校验和")]),t._v(" "),v("p",[t._v("占用两个字节，防止传输过程中数据包有损坏，如果遇到校验和有差错的报文，TCP 直接丢弃，等待重传。")]),t._v(" "),v("h1",{attrs:{id:"可选项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#可选项"}},[t._v("#")]),t._v(" 可选项")]),t._v(" "),v("p",[t._v("格式：种类、长度、值")]),t._v(" "),v("ol",[v("li",[t._v("TimeStamp: TCP 时间戳。")]),t._v(" "),v("li",[t._v("MSS：指的是 TCP 允许的从对方接收的最大报文段。")]),t._v(" "),v("li",[t._v("SACK: 选择确认选项。")]),t._v(" "),v("li",[t._v("Window Scale: 窗口缩放选项。")])])])}),[],!1,null,null,null);a.default=s.exports}}]);